"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'your@gmail.com'
EMAIL_HOST_PASSWORD = 'Password'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'maw7ta$e%&2@06h+pirgzmuqnmshtrr(mth7a3*4qe)uc&w-w('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'profiles',
    'crispy_forms',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'website.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
 )

WSGI_APPLICATION = 'website.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'profiles',
        'USER': 'root',
        'PASSWORD': 'qa123',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

if DEBUG:
    #STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR),"static","static-only")
    #MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR),"static","media")
    #STATICFILES_DIRS = (os.path.join(os.path.dirname(BASE_DIR),"static","static"),)

    STATIC_ROOT = os.path.join(BASE_DIR, "zzstatic", "static")
    MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "media")
    STATICFILES_DIRS = [
        os.path.join(os.path.dirname(BASE_DIR), "static"),
    ]

CRISPY_TEMPLATE_PACK = 'bootstrap3'

SITE_ID = 1

LOGIN_URL = '/accounts/login/'
LOGIN_REDIRECT_URL = '/'

ACCOUNT_ADAPTER='profiles.useradapter.MyAccountAdapter'
#ACCOUNT_AUTHENTICATED_LOGIN_REDIRECTS (=True)
#ACCOUNT_AUTHENTICATION_METHOD (=”username” | “email” | “username_email”)
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_CONFIRM_EMAIL_ON_GET = False
#ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = settings.LOGIN_URL
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = LOGIN_URL
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = None
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 3
#ACCOUNT_EMAIL_CONFIRMATION_HMAC (=True)

ACCOUNT_EMAIL_REQUIRED = True
#ACCOUNT_EMAIL_VERIFICATION (=”optional”)
#ACCOUNT_EMAIL_VERIFICATION = False
ACCOUNT_EMAIL_SUBJECT_PREFIX = 'My WebSite: '
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'
#ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN (=180)

#ACCOUNT_FORMS (={})
#ACCOUNT_LOGIN_ATTEMPTS_LIMIT (=5)
#ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT (=300)

ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True

ACCOUNT_LOGOUT_ON_GET = True
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = False
ACCOUNT_LOGIN_ON_PASSWORD_RESET = False
ACCOUNT_LOGOUT_REDIRECT_URL = '/'
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False

#ACCOUNT_PRESERVE_USERNAME_CASING (=True)
#ACCOUNT_SESSION_REMEMBER (=None)
#ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE (=False)
ACCOUNT_SIGNUP_FORM_CLASS = None
#ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE (=True)

#ACCOUNT_TEMPLATE_EXTENSION (=”html”)
#ACCOUNT_USERNAME_BLACKLIST (=[])
#ACCOUNT_UNIQUE_EMAIL (=True)
#ACCOUNT_USER_DISPLAY (=a callable returning user.username)
#ACCOUNT_USER_MODEL_EMAIL_FIELD = ”email”
#ACCOUNT_USER_MODEL_USERNAME_FIELD = ”username”
ACCOUNT_USERNAME_MIN_LENGTH = 5
ACCOUNT_USERNAME_REQUIRED = True

#ACCOUNT_USERNAME_VALIDATORS (=None)
#ACCOUNT_USERNAME_VALIDATORS = 'some.module.validators.custom_username_validators'
#SOCIALACCOUNT_ADAPTER (=”allauth.socialaccount.adapter.DefaultSocialAccountAdapter”)
#SOCIALACCOUNT_AUTO_SIGNUP (=True)
#SOCIALACCOUNT_EMAIL_VERIFICATION (=ACCOUNT_EMAIL_VERIFICATION)
#SOCIALACCOUNT_EMAIL_REQUIRED (=ACCOUNT_EMAIL_REQUIRED)
#SOCIALACCOUNT_FORMS (={})
#SOCIALACCOUNT_PROVIDERS (= dict)
#SOCIALACCOUNT_QUERY_EMAIL (=ACCOUNT_EMAIL_REQUIRED)
#SOCIALACCOUNT_STORE_TOKENS (=True)
